@model WebApplication8.Models.Worker

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.empname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.empname, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.empname)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email)
                @Html.ValidationMessageFor(model => model.email)
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.country_name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
          @*    @Html.DropDownList("Countries", new SelectList(ViewBag.Countries as System.Collections.IEnumerable,
               "country_id", "country_name"), "Select Country", new { id = "dd_Country" }) *@
                @Html.DropDownList("Countries", new List<SelectListItem>
           {new SelectListItem {Text="India",Value="1",Selected=true },
              new SelectListItem {Text="USA",Value="2",Selected=true },
                 new SelectListItem {Text="Canada",Value="3",Selected=true } },
           "Select Country")
           
                @Html.ValidationMessageFor(model => model.country_name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state_name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @*  @Html.DropDownListFor(Model => Model.state_name,
               new SelectList(Enumerable.Empty<SelectListItem>(), "state_id", "statename"),
                          "Select a State", new { id = "ddState" })*@
                @Html.DropDownList("States", new List<SelectListItem>
           {new SelectListItem {Text="Maharastra",Value="1",Selected=true },
              new SelectListItem {Text="Delhi",Value="2",Selected=true },
                 new SelectListItem {Text="Telangana",Value="3",Selected=true },
          new SelectListItem {Text="NewYork",Value="4",Selected=true } },
           "Select State")
                <span id="span1" name="span1"></span>
            </div>
        </div>
   
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary " />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>